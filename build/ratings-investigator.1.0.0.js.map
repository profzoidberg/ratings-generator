{"version":3,"sources":["webpack:///webpack/bootstrap a2e724a93128602dac88","webpack:///./js/app.js"],"names":["$","submit","event","preventDefault","searchTerm","val","alert","getRequest","newSearch","remove","resetSearch","hide","click","hasData","params","url","seasonNum","maxSeason","show","t","r","getJSON","data","imdbRating","undefined","text","Plot","find","Title","seasonResponse","seasonObject","Season","seasonContent","Response","clone","episode","i","Episodes","length","episodeContent","Episode","append","html","parseInt","key"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCAA,GAAE,YAAW;AACTA,OAAE,SAAF,EAAaC,MAAb,CAAoB,UAASC,KAAT,EAAgB;AAChCA,eAAMC,cAAN;AACA,aAAIC,aAAaJ,EAAE,QAAF,EAAYK,GAAZ,EAAjB;AACA,aAAID,eAAe,EAAnB,EAAuB;AACnBE,mBAAM,8BAAN;AACH,UAFD,MAEO;AACHC,wBAAWH,UAAX;AACH;AACDI;AACH,MATD;AAUA,cAASA,SAAT,GAAqB;AACjBR,WAAE,QAAF,EAAYK,GAAZ,CAAgB,EAAhB;AACAL,WAAE,UAAF,EAAcS,MAAd;AACH;AACD,cAASC,WAAT,GAAuB;AACnBV,WAAE,QAAF,EAAYK,GAAZ,CAAgB,EAAhB;AACAL,WAAE,QAAF,EAAYW,IAAZ;AACAX,WAAE,OAAF,EAAWW,IAAX;AACAX,WAAE,UAAF,EAAcS,MAAd;AACH;AACDT,OAAE,QAAF,EAAYY,KAAZ,CAAkBF,WAAlB;AACH,EAtBD;AAuBA,KAAIH,aAAa,SAAbA,UAAa,CAASH,UAAT,EAAqB;AAClC,SAAIS,UAAU,IAAd;AACA,SAAIC,eAAJ;AACA,SAAMC,MAAM,0BAAZ;AACA,SAAIC,YAAY,CAAhB;AACA,SAAIC,YAAY,EAAhB;AACAjB,OAAE,iBAAF,EAAqBkB,IAArB;AACAlB,OAAE,QAAF,EAAYkB,IAAZ;AACAlB,OAAE,OAAF,EAAWkB,IAAX;AACA;AACAJ,cAAS;AACLK,YAAGf,UADE;AAELgB,YAAG;AAFE,MAAT;;AAKApB,OAAEqB,OAAF,CAAUN,GAAV,EAAeD,MAAf,EAAuB,UAASQ,IAAT,EAAe;AAClC,aAAIA,KAAKC,UAAL,KAAoBC,SAAxB,EAAmC;AAC/BxB,eAAE,YAAF,EAAgBW,IAAhB;AACAX,eAAE,OAAF,EAAWW,IAAX;AACAX,eAAE,eAAF,EAAmBW,IAAnB;AACAX,eAAE,gBAAF,EAAoByB,IAApB,CAAyB,mBAAzB;AACH,UALD,MAKO;AACHzB,eAAE,eAAF,EAAmBkB,IAAnB;AACAlB,eAAE,gBAAF,EAAoByB,IAApB,CAAyB,oBAAoBH,KAAKC,UAAlD;AACAvB,eAAE,cAAF,EAAkByB,IAAlB,CAAuBH,KAAKI,IAA5B;AACA1B,eAAE,QAAF,EAAY2B,IAAZ,CAAiB,eAAjB,EAAkCF,IAAlC,CAAuCH,KAAKM,KAA5C;AACA;AACH;AACJ,MAbD;AAcA,SAAIC,iBAAiB,CAArB;AACA,SAAIC,eAAe,EAAnB;AACA,YAAOjB,WAAWG,YAAYC,SAA9B,EAAyC;AACrC;AACAH,kBAAS;AACLK,gBAAGf,UADE;AAEL2B,qBAAQf,SAFH;AAGLI,gBAAG;AAHE,UAAT;AAKApB,WAAEqB,OAAF,CAAUN,GAAV,EAAeD,MAAf,EAAuB,UAASQ,IAAT,EAAe;AAClCO;AACA,iBAAIG,sBAAJ;AACA,iBAAIV,KAAKW,QAAL,IAAiB,OAArB,EAA8B;AAC1B;AACApB,2BAAU,KAAV;AACAmB,iCAAgB,IAAhB;AACH,cAJD,MAIO;AACH;AACAA,iCAAgBhC,EAAE,iBAAF,EAAqBkC,KAArB,EAAhB;AACA;AACAF,+BAAcL,IAAd,CAAmB,eAAnB,EAAoCF,IAApC,CAAyC,YAAYH,KAAKS,MAA1D;AACA;AACA,qBAAII,gBAAJ;AACA,sBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAId,KAAKe,QAAL,CAAcC,MAAlC,EAA0CF,GAA1C,EAA+C;AAC3CD,+BAAUb,KAAKe,QAAL,CAAcD,CAAd,CAAV;AACA;AACA,yBAAIG,iBAAiBvC,EAAE,kBAAF,EAAsBkC,KAAtB,EAArB;AACA;AACAK,oCAAeZ,IAAf,CAAoB,gBAApB,EAAsCF,IAAtC,CAA2C,aAAaU,QAAQK,OAArB,GAA+B,GAA/B,GAAqC,GAArC,GAA2CL,QAAQP,KAAnD,GAA2D,IAA3D,GAAkEO,QAAQZ,UAArH;AACA;AACAS,mCAAcS,MAAd,CAAqBF,eAAeG,IAAf,EAArB;AACA;AACH;AACJ;AACDZ,0BAAaa,SAASrB,KAAKS,MAAd,CAAb,IAAsCC,aAAtC;AACA,iBAAIH,kBAAkBb,YAAY,CAAlC,EAAqC;AACjC,sBAAI,IAAI4B,GAAR,IAAed,YAAf,EAA6B;AACzB,yBAAI,CAACA,aAAac,GAAb,CAAL,EAAwB;AACpB;AACH;AACD5C,uBAAE,iBAAF,EAAqByC,MAArB,CAA4B,2BAA2BX,aAAac,GAAb,EAAkBF,IAAlB,EAA3B,GAAsD,QAAlF;AACH;AACJ;AACD;AACA;AACH,UApCD;AAqCA1B;AACH;AACJ,EA7ED,C","file":"ratings-investigator.1.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a2e724a93128602dac88\n **/","$(function() {\n    $('#search').submit(function(event) {\n        event.preventDefault();\n        var searchTerm = $('#query').val();\n        if (searchTerm === '') {\n            alert('Please investigate a series!');\n        } else {\n            getRequest(searchTerm);\n        }\n        newSearch();\n    });\n    function newSearch() {\n        $('#query').val('');\n        $('.seasons').remove();\n    }\n    function resetSearch() {\n        $('#query').val('');\n        $('.title').hide();\n        $('.plot').hide();\n        $('.seasons').remove();\n    }\n    $('#reset').click(resetSearch);\n});\nvar getRequest = function(searchTerm) {\n    let hasData = true;\n    let params;\n    const url = 'http://www.omdbapi.com/?';\n    let seasonNum = 1;\n    let maxSeason = 30;\n    $('#search-results').show();\n    $('.title').show();\n    $('.plot').show();\n    // div is display: none in css, when user clicks submit, the div will show\n    params = {\n        t: searchTerm,\n        r: 'json'\n    };\n\n    $.getJSON(url, params, function(data) {\n        if (data.imdbRating === undefined) {\n            $('#star-rate').hide();\n            $('.plot').hide();\n            $('.series-title').hide();\n            $('.series-rating').text('Series Not Found!');\n        } else {\n            $('.series-title').show();\n            $('.series-rating').text('Series Rating: ' + data.imdbRating);\n            $('.series-plot').text(data.Plot);\n            $('.title').find('.series-title').text(data.Title);\n            // places the text of the show title to the page\n        }\n    });\n    let seasonResponse = 0;\n    let seasonObject = {};\n    while (hasData && seasonNum < maxSeason) {\n        // run the while loop until we reach maxSeason, or we have data\n        params = {\n            t: searchTerm,\n            Season: seasonNum,\n            r: 'json'\n        };\n        $.getJSON(url, params, function(data) {\n            seasonResponse++;\n            let seasonContent;\n            if (data.Response == 'False') {\n                // if data is null, then hasData will equal false, thus stopping the while loop.\n                hasData = false;\n                seasonContent = null;\n            } else {\n                // $('.plot').find('.series-plot').text(data.Plot);\n                seasonContent = $('.season-content').clone();\n                // cloning the season-content div and storing in variable\n                seasonContent.find('.season-title').text('Season ' + data.Season);\n                // this shows the correct season number\n                let episode\n                for (let i = 0; i < data.Episodes.length; i++) {\n                    episode = data.Episodes[i];\n                    // showResults(episode);\n                    let episodeContent = $('.episode-content').clone();\n                    // cloning the season-content div and storing in variable\n                    episodeContent.find('.episode-title').text('Episode ' + episode.Episode + ':' + ' ' + episode.Title + ', ' + episode.imdbRating);\n                    // changing the value of seasonContent\n                    seasonContent.append(episodeContent.html());\n                    // when you use .html(), you return only a string value\n                }\n            }\n            seasonObject[parseInt(data.Season)] = seasonContent;\n            if (seasonResponse == seasonNum - 1) {\n                for(var key in seasonObject) {\n                    if (!seasonObject[key]) {\n                        continue;\n                    }\n                    $('#search-results').append('<div class =\"seasons\">' + seasonObject[key].html() + '</div>');\n                }\n            }\n            // all the data, the final commit\n            // seasons append to separate div classes\n        });\n        seasonNum++;\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/app.js\n **/"],"sourceRoot":""}